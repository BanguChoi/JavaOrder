spring.application.name=javaOrder

# 서버 설정
server.servlet.encoding.force=true

# datasource (oracle)
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xepdb1
spring.datasource.username=javaorder
spring.datasource.password=1234

<<<<<<< HEAD
#jpa setting
# 데이터베이스의 구조를 생성하는 DDL을 처리하는 옵션
spring.jpa.hibernate.ddl-auto=update

# DDL을 생성할 때 JPA가 데이터베이스를 초기화해야 하는지 여부 설정
spring.jpa.generate-ddl=true

# 실행되는 SQL문을 보여줄 것인가의 여부를 지정 (질의문이 한 줄로 보여진다)
#spring.jpa.show-sql=true
# 질의문이 한줄로 보여진다.
logging.level.org.hibernate=info

#스프링 부트가 실행되면서 사용하는 SQL들의 포맷팅을 의미하는데 true인 경우 줄 바꿈 처리
spring.jpa.properties.hibernate.format_sql=true

# 사용하는 데이터베이스 지정
spring.jpa.database=oracle

# true일 경우 트랜잭션이 완수되어도 영속성 컨텍스트는 살아있다.
spring.jpa.open-in-view=true

#cid
kakaopayJavaOrder.cid=TC0ONETIME
# secretKey
kakaopayJavaOrder.kakaopay-secret-key=DEV72140AA845DB49076BC816EF5B3E89407FF6A
# host url
kakaopayJavaOrder.host=http://localhost:8080

#파일 업로드
# 추가된 설정은 파일 하나의 최대 크기를 10MB로 제한하고 한 번에 전송하는 데이터는 30MB로 제한.
#spring.servlet.multipart.max-request-size=30MB
#spring.servlet.multipart.max-file-size=10MB

#파일 업로드 위치
#com.spring.upload.path=upload

# 세션 타임아웃 (단위: 분)
server.servlet.session.timeout=30m

spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# src/main/resources/application.properties
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
