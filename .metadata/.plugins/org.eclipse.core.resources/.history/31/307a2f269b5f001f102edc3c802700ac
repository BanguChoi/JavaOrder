package com.javaOrder.kakaopay.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.javaOrder.kakaopay.model.KakaoPayReadyRequestVO;
import com.javaOrder.kakaopay.model.KakaoPayReadyResponseVO;

@Service
public interface KakaoPayServiceImpl extends KakaoPayService {
	@Value("${kakaopayJavaOrder.kakaopay-secret-key}")
	private static final String kakaoSecretKey;
	
	@Value("${kakaopayJavaOrder.cid}")
	private final String cid;
	
	@Value("${kakaopayJavaOrder.host}")
	private final String hostURL;
	
	private String tid;
	
	public KakaoPayReadyResponseVO ready(String agent, String openType) {
		// Request Header
		HttpHeaders headers = new HttpHeaders();
		headers.add("Authorization", "DEV_SECRET_KEY "+kakaoSecretKey);
		headers.setContentType(MediaType.APPLICATION_JSON);
		
		// Request param
		KakaoPayReadyRequestVO readyRequest = KakaoPayReadyRequestVO.builder()
				.cid(cid)
				.partnerOrderId("1")
				.partnerUserId("1")
				.itemName("상품명")
				.quantity(1)
				.totalAmount(1100)
				.taxFreeAmount(0)
				.vatAmount(100)
				.approvalUrl(hostURL+"/approve/"+agent+"/"+openType)
				.cancelUrl(hostURL+"/cancel/"+agent+"/"+openType)
				.failUrl(hostURL+"/fail/"+agent+"/"+openType)
				.build();
		
		// Send request
		HttpEntity<KakaoPayReadyRequestVO> entityMap = new HttpEntity<>(readyRequest, headers);
		ResponseEntity<KakaoPayReadyResponseVO> response = new RestTemplate().postForEntity(
					"https://open-api.kakaopay.com/online/v1/payment/ready",
					entityMap,
					KakaoPayReadyResponseVO.class
		);
		KakaoPayReadyResponseVO readyResponse = response.getBody();
		
		// 주문번호와 TID 매핑해서 저장
		// Mapping TID with partner_order_id than save it to use for approval request.
		this.tid = readyResponse.getTid();
		return readyResponse;
	}
	
}
